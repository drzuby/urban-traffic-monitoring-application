syntax = "proto3";

option java_package = "pl.edu.agh.pp.operations";

option java_outer_classname = "AnomalyOperationProtos";

message AnomalyAction {
    ActionType action = 1;
    string channel = 2;
    string nickname = 3;

    enum ActionType {
        JOIN = 0;
        LEAVE = 1;
    }
}

message AnomalyState {

    repeated AnomalyAction state = 1;

}

// Message which carry some information about the traffic conditions
message AnomalyMessage {

    int32 routeIdx = 1;
    int32 secondOfDay = 2;
    bool isActive = 3;
    int32 duration = 4;
    int32 dayOfWeek = 5;
    int32 severity = 6;
    string message = 7;
    string anomalyID = 8;
    string date = 9;
    int32 normExceed = 10;

}

// Message that carry the specific inner-message and the information about the type of this inner-message.
message ManagementMessage {

    enum Type {
        BONJOURMESSAGE = 0;
        SYSTEMGENERALMESSAGE = 1;
        LEVERMESSAGE = 2;
        BASELINEMESSAGE = 3;
        DEMANDBASELINEMESSAGE = 4;
        ROUTEMESSAGE = 5;
        AVAILABLEHISTORICALMESSAGE = 6;
        DEMANDAVAILABLEHISTORICALMESSAGE = 7;
        HISTORICALMESSAGE = 8;
        DEMANDHISTORICALMESSAGE = 9;
        DEMANDHISTORICALANOMALIESMESSAGE = 10;
        HISTORICALANOMALIESMESSAGE = 11;
    }

    // Identifies which field will be filled in.
    Type type = 1;

    // One of the following will be filled in.
    // Others will be empty and no space will be used additionally while sending the message.
    BonjourMessage bonjourMessage = 2;
    SystemGeneralMessage systemGeneralMessage = 3;
    LeverMessage leverMessage = 4;
    BaselineMessage baselineMessage = 5;
    DemandBaselineMessage demandBaselineMessage = 6;
    RouteMessage routeMessage = 7;
    AvailableHistoricalMessage availableHistoricalMessage = 8;
    DemandAvailableHistoricalMessage demandAvailableHistoricalMessage = 9;
    HistoricalMessage historicalMessage = 10;
    DemandHistoricalMessage demandHistoricalMessage = 11;
    DemandHistoricalAnomaliesMessage demandHistoricalAnomaliesMessage = 12;
    HistoricalAnomaliesMessage historicalAnomaliesMessage = 13;

}

// The welcome message which is sent by each client to the server
// after the creation of the unicast connection between client and server.
message BonjourMessage {

    int32 token = 1;
    string date = 2;
    string userName = 3;

}

// The message which contains the environment, connection and server parameters.
message SystemGeneralMessage {

    // The structure that specifies available shifts. (Precisely)
    enum Shift {
        DAY = 0;
        NIGHT = 1;
        UNIVERSAL = 2;
    }

    int32 messageIdx = 1;
    double leverValue = 2;
    string systemDate = 3;
    int32 anomalyLiveTime = 4;
    int32 baselineWindowSize = 5;
    Shift shift = 6;
    int32 port = 7;
    string routes = 8;
    string mapsApiKey = 9;
    map<int32, AnomalyMessage> currentAnomalies = 10;
    string requestFreq = 11;

}

// The message that contains the reference to each single route defined in the server workspace.
// Each single route is sent in a single message due to the JGroups message size limits.
message RouteMessage {

    int32 routeID = 1;
    string origin = 2;
    string destination = 3;
    string coords = 4;
    string name = 5;

}

// The message which carry the information about the current value of the parameters called sensitivity factor.
message LeverMessage {

    double leverValue = 1;
    string leverUpdateDate = 2;

}

// The message that contains the baseline for specified day, route and baseline type.
message BaselineMessage {

    // The structure that specifies available days of week. (Precisely)
    enum Day {
        NULLDAY = 0;
        MONDAY = 1;
        TUESDAY = 2;
        WEDNESDAY = 3;
        THURSDAY = 4;
        FRIDAY = 5;
        SATURDAY = 6;
        SUNDAY = 7;
    }

    int32 routeIdx = 1;
    Day day = 2;
    map<int32, int32> baseline = 3;
    string baselineType = 4;

}

// The message which is a request for baseline of specified day, route and baseline type.
message DemandBaselineMessage {

    // The structure that specifies available days of week. (Precisely)
    enum Day {
        NULLDAY = 0;
        MONDAY = 1;
        TUESDAY = 2;
        WEDNESDAY = 3;
        THURSDAY = 4;
        FRIDAY = 5;
        SATURDAY = 6;
        SUNDAY = 7;
    }

    int32 routeIdx = 1;
    Day day = 2;
    string baselineType = 3;

}

// The message that is the request for all available historical data.
message DemandAvailableHistoricalMessage {
    // the empty message
}

// The message that contains all available routes. It's the inner-message of the AvailableHistoricalMessage message.
message AvailableRoutes {

    map <int32, int32> routes = 1;

}

// The message that contains all available routes and date in the context of available data.
message AvailableHistoricalMessage {

    // this is made on map structure, but please be aware of the limits of this solution.
    // the max size is 8192
    // <date, route> so its <string, int32>
    map<string, AvailableRoutes> avaiableDateRoutes = 1;

}

// The message that carry the request for historical data for specified date and route.
message DemandHistoricalMessage {

    int32 routeID = 1;
    string date = 2;

}

// Message that contains ale the data/measures stored by server for specified route and date.
message HistoricalMessage {

    int32 routeID = 1;
    string date = 2;
    map<int32, int32> measures = 3;

}

// The message that contains the information about the presence of anomalies in specified condition (day).
message HistoricalAnomalyPresenceMessage {
    map<int32, int32> presence = 1;
}

// The message that is a historical anomalies request.
message DemandHistoricalAnomaliesMessage {

    int32 routeID = 1;
    string date = 2;

}

// The message that carry the structure with all anomalies that occured in specified conditions (route and date).
message HistoricalAnomaliesMessage {

    int32 routeID = 1;
    string date = 2;
    map<string, HistoricalAnomalyPresenceMessage> anomalies = 3;

}